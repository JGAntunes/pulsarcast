@article{Jannotti2000,
abstract = {Overcast is an application-level multicasting system that can be incrementally deployed using today's Internet infrastructure. These properties stem from Overcast's implementation as an overlay network. An overlay network consists of a collection of nodes placed at strategic locations in an existing network fabric. These nodes implement a network abstrac- tion on top of the network provided by the under- lying substrate network. Overcast provides scalable and reliable single-source multicast using a simple protocol for building effi- cient data distribution trees that adapt to changing network conditions. To support fast joins, Overcast implements a new protocol for efficiently tracking the global status of a changing distribution tree. Results based on simulations confirm that Over- cast provides its added functionality while perform- ing competitively with IP Multicast. Simulations indicate that Overcast quickly builds bandwidth- efficient distribution trees that, compared to IP Multicast, provide 70{\%}-100{\%} of the total band- width possible, at a cost of somewhat less than twice the network load.},
author = {Jannotti, John and Gifford, David K. and Johnson, Kirk L. and Kaashoek, M. Frans and {O'Toole Jr.}, James W.},
file = {:home/jgantunes/Downloads/pubsub/pubsub papers/pubsub papers/jannotti.pdf:pdf},
journal = {OSDI'00 Proceedings of the 4th conference on Symposium on Operating System Design {\&} Implementation},
pages = {14},
title = {{Overcast: reliable multicasting with an overlay network}},
url = {http://dl.acm.org/citation.cfm?id=1251229.1251243},
year = {2000}
}
@article{Ratnasamy2001,
abstract = {Most currently proposed solutions to application-level multicast orga- nize the group members into an application-level mesh over which a Distance- Vector routing protocol, or a similar algorithm, is used to construct source-rooted distribution trees. The use of a global routing protocol limits the scalability of these systems. Other proposed solutions that scale to larger numbers of receivers do so by restricting the multicast service model to be single-sourced. In this pa- per, we propose an application-level multicast scheme capable of scaling to large group sizes without restricting the service model to a single source. Our scheme builds on recent work on Content-Addressable Networks (CANs). Extending the CANframework to support multicast comes at trivial additional cost and, because of the structured nature of CAN topologies, obviates the need for a multicast routing algorithm. Given the deployment of a distributed infrastructure such as a CAN, we believe our CAN-based multicast scheme offers the dual advantages of simplicity and scalability. 1},
author = {Ratnasamy, Sylvia and Handley, Mark and Karp, Richard and Shenker, Scott},
file = {:home/jgantunes/Downloads/pubsub/pubsub papers/pubsub papers/Information Security and Privacy 2001 Ratnasamy.pdf:pdf},
keywords = {application multicast,overlay},
mendeley-tags = {application multicast,overlay},
title = {{Application-Level Multicast using Content-Addressable Networks}},
year = {2001}
}
@article{Morris1997,
abstract = {BMTP offers rate controlled multicast with reliability, high throughput, and support for large numbers of receivers. A multicast sender needs feedback from receivers to recover from errors and to choose an appropriate send rate, but must avoid being overwhelmed as the number of receivers grows. BMTP does this by keeping the rate at which each receiver sends feedback inversely proportional to a running estimate of the number of receivers. BMTP bases its send rate on the minimum of the receive rates observed by the receivers, causing the sender to slow down in the face of packet loss or competing traffic, and to speed up when there is spare network capacity. BMTP�s NAK-based retransmission rarely sends any data more than twice, a substantial improvement over iterated unicast. Rabin�s Information Dispersal Algorithm can reduce this re-send rate as close as desired to the underlying loss rate of the network. Simulations with 1000 receivers substantiate these claims.},
author = {Morris, Robert},
file = {:home/jgantunes/Downloads/pubsub/pubsub papers/pubsub papers/INFOCOM-97  Morris.pdf:pdf},
issn = {0743166X},
journal = {Proceedings of the IEEE International Conference on Computer Communications (INFOCOM)},
keywords = {network multicast,reliability},
mendeley-tags = {network multicast,reliability},
pages = {455--462},
title = {{Bulk Multicast Transport Protocol}},
year = {1997}
}
@article{Banavar1999,
abstract = {The publish/subscribe (or pub/sub) paradigm is an increasingly popular model for interconnecting applications in a distributed environment. Many existing pubsystems are based on pre-defined subjects, and hence are able to exploit multicast technologies to provide scalability and availability. An emerging alternative to subject-based systems, known as content-based systems, allow information consumers to request events based on the content of published events. This model is considerably more flexible than subject-based pubsub. However, it was previously not known how to efficiently multicast published events to interested content-based subscribers within a large and geographically distributed network of broker (or router) machines. We develop and evaluate a novel and efficient distributed algorithm for this purpose, called -link matching”. Link matching performs just enough computation at each node to determine the subset of links to which an event should be forwarded. We show via simulations that: link matching yields higher throughput than flooding when subscriptions are selective; and the overall CPU utilization of link matching is comparable to that of centralized matching},
author = {Banavar, G. and Chandra, T. and Mukherjee, B. and Nagarajarao, J. and Strom, R.E. and Sturman, D.C.},
doi = {10.1109/ICDCS.1999.776528},
file = {:home/jgantunes/Downloads/pubsub/pubsub papers/pubsub papers/ICDCS-99  Banavar.pdf:pdf},
isbn = {0-7695-0222-9},
issn = {10636927},
journal = {Proceedings. 19th IEEE International Conference on Distributed Computing Systems (Cat. No.99CB37003)},
keywords = {application multicast,content based routing},
mendeley-tags = {application multicast,content based routing},
pages = {262--272},
title = {{An efficient multicast protocol for content-based publish-subscribe systems}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=776528},
year = {1999}
}
@techreport{Voulgaris2005,
abstract = {In this paper, we address the problem of constructing scalable content-based publish/subscribe systems. Publish/subscribe systems are asynchronous event-notification systems in which a published event is forwarded to exactly those nodes that have previously subscribed for that event. Subscriptions can range from a simple specification of merely the type of an event to a specification of the value ranges that an event's attributes can have. Notably the latter poses potential scalability problems. Structured peer-to-peer systems can provide scalable solutions to publish/subscribe systems with simple subscription patterns. For complex subscription types their applicability is less obvious. In this paper, we present Sub-2-Sub, a collaborative self-organizing publish/subscribe system deploying an unstructured overlay network. Sub-2-Sub relies on an epidemic-based algorithm in which peers continuously exchange subscription information to get clustered to similar peers. In contrast to many existing approaches, Sub-2-Sub supports both value-based and interval-based subscriptions. Simulations of Sub-2-Sub on synthetic and reusable workloads convey its good properties in terms of routing efficiency, fairness, accuracy and efficiency.},
author = {Voulgaris, Spyros and Rivi{\`{e}}re, Etienne and Kermarrec, Anne-Marie and Steen, Maarten Van},
doi = {10.1.1.60.8590},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Voulgaris et al. - 2005 - Sub-2-Sub Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Networ.pdf:pdf},
keywords = {CONTENT-BASED PUBLISH/SUBSCRIBE,DISTRIBUTED SYSTEMS,MIDDLEWARE,PEER-TO-PEER},
pages = {16},
title = {{Sub-2-Sub: Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Networks}},
url = {https://hal.inria.fr/inria-00070248 https://hal.inria.fr/inria-00070248/},
year = {2005}
}
@article{Gupta2004,
abstract = {Publish/Subscribe systems have become a prevalent model for delivering data from producers (publishers) to consumers (subscribers) distributed across wide-area networks while decoupling the publishers and the subscribers from each other. In this paper we present Meghdoot, which adapts content-based publish/subscribe systems to Distributed Hash Table based P2P networks in order to provide scalable content delivery mechanisms while maintaining the decoupling between the publishers and the subscribers. Meghdoot is designed to adapt to highly skewed data sets, which is typical of real applications. The experimental results demonstrate that Meghdoot balances the load among the peers and the design scales well with increasing number of peers, subscriptions and events.},
author = {Gupta, Abhishek and Sahin, Ozgur D and Agrawal, Divyakant and {El Abbadi}, Amr},
doi = {10.1007/b101561},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Gupta et al. - Unknown - Meghdoot Content-Based PublishSubscribe over P2P Networks.pdf:pdf},
isbn = {3-540-23428-4},
issn = {03029743},
journal = {Springer LNCS},
number = {Middleware 2004},
pages = {254--273},
title = {{Meghdoot: Content-Based Publish/Subscribe over P2P Networks}},
url = {http://www.springerlink.com/content/vwcyfq84f4pme6k4/},
volume = {3231/2004},
year = {2004}
}
@article{Baldoni2007,
abstract = {The completely decoupled interaction model offered by the publish/subscribe communication paradigm perfectly suits the interoperability needs of todays large-scale, dy-namic, peer-to-peer applications. The unmanaged envi-ronments, where these applications are expected to work, pose a series of problems (potentially wide number of par-tipants, low-reliability of nodes, absence of a centralized authority, etc.) that severely limit the scalability of exist-ing approaches which were originally thought for support-ing distributed applications built on the top of static and managed environments. In this paper we propose an archi-tecture for implementing the topic-based publish/subscribe paradigm in large scale peer-to-peer systems. The archi-tecture is based on clustering peers subscribed to the same topic. The major novelty of this architecture lies in the mechanism employed to bring events from the publisher to the cluster (namely outer-cluster routing). The evaluation shows that this mechanism for outer-cluster routing has a probability to bring events to the destination cluster very close to 1 while keeping small the involved number of out-of-cluster peers. Finally, the overall architecture is shown to be scalable along several fundamental dimensions like number of participants, subscriptions, and to exhibit a fair load distribution (load distribution closely follows the dis-tribution of subscriptions on nodes).},
author = {Baldoni, R and Beraldi, R and Ema, V Q and Querzoni, L and Tucci-Piergiovanni, S},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Baldoni et al. - Unknown - TERA Topic-based Event Routing for peer-to-peer Architectures.pdf:pdf},
title = {{TERA: Topic-based Event Routing for peer-to-peer Architectures}},
year = {2007}
}
@article{Kermarrec2013,
abstract = {Increasingly, one of the most prominent ways to disseminate information on the Web is through "notifications" (also known as alerts), and as such they are at the core of many large-scale applications. For instance, users are notified of articles in which they are interested through RSS feeds, of posts from their friends through social networks, or of recommendation generated by various sites. Event notification usually relies on the so-called Publish-Subscribe (PUB/SUB) communication paradigm. In PUB/SUB systems, subscribers sign up for events or classes of events in order to be asynchronously notified afterward by the system. The size of such systems (with respect to events and subscriptions) keeps growing, and providing scalable implementations of PUB/SUB systems is extremely challenging. Although there exist popular examples of centralized PUB/SUB systems that currently support a large number of subscribers, such as online social networks, they periodically face formidable challenges due to peak loads and do not always offer a support for fine-grain subscriptions. In fact, providing scalability along with expressiveness in the subscription patterns calls for distributed implementations of PUB/SUB systems. In parallel, peer-to-peer (P2P) overlay networks have emerged, providing a sound and highly scalable network foundation upon which to build distributed applications including PUB/SUB systems. In this article, we focus on fully decentralized (P2P), highly scalable, PUB/SUB systems. More specifically, we investigate how PUB/SUB and P2P research can be integrated. We define the design space and explore it in a systematic way. We expose an understanding of available design choices; provide a comprehensive classification and understanding of prominent P2P PUB/SUB systems, positioning them against the design dimensions; and highlight correlations between and implications, benefits, and shortcomings of design alternatives. [ABSTRACT FROM AUTHOR]},
author = {Kermarrec, Anne-Marie and Triantafillou, Peter},
doi = {10.1145/2543581.2543583},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Kermarrec, Triantafillou - 2013 - XL peer-to-peer pubsub systems.pdf:pdf},
issn = {03600300},
journal = {ACM Computing Surveys},
number = {2},
pages = {1--45},
title = {{XL peer-to-peer pub/sub systems}},
url = {http://dl.acm.org/citation.cfm?doid=2543581.2543583},
volume = {46},
year = {2013}
}
@article{Benet,
abstract = {The InterPlanetary File System (IPFS) is a peer-to-peer dis- tributed file system that seeks to connect all computing de- vices with the same system of files. In some ways, IPFS is similar to the Web, but IPFS could be seen as a sin- gle BitTorrent swarm, exchanging objects within one Git repository. In other words, IPFS provides a high through- put content-addressed block storage model, with content- addressed hyper links. This forms a generalized Merkle DAG, a data structure upon which one can build versioned file systems, blockchains, and even a PermanentWeb. IPFS combines a distributed hashtable, an incentivized block ex- change, and a self-certifying namespace. IPFS has no single point of failure, and nodes do not need to trust each other.},
author = {Benet, Juan},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Juan Benet - Unknown - IPFS - Content Addressed, Versioned, P2P File System.pdf:pdf},
title = {{IPFS - Content Addressed, Versioned, P2P File System}}
}
