@article{Aguilera1999,
abstract = {Content-based subscription systems are an emerging alternative to traditional publish-subscribe systems, because they permit more flexible subscriptions along multiple dimensions. In these systems, each subscription is a predicate which may test arbitrary attributes within an event. However, the matching problem for content-based systems - determining for each event the subset of all subscriptions whose predicates match the event - is still an open problem. We present an efficient, scalable solution to the matching problem. Our solution has an expected time complexity that is sub-linear in the number of subscriptions, and it has a space complexity that is linear. Specifically, we prove that for predicates reducible to conjunctions of elementary tests, the expected time to match a random event is no greater than O(N1-{\&}lambda;) where N is the number of subscriptions, and {\&}lambda; is a closed-form expression that depends on the number and type of attributes (in some cases, {\&}lambda;{\&}asyum;1/2). We present some optimizations to our algorithms that improve the search time. We also present the results of simulations that validate the theoretical bounds and that show acceptable performance levels for tens of thousands of subscriptions.},
author = {Aguilera, Marcos K. and Strom, Robert E. and Sturman, Daniel C. and Astley, Mark and Chandra, Tushar D.},
doi = {10.1145/301308.301326},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Aguilera et al. - 1999 - Matching events in a content-based subscription system.pdf:pdf},
isbn = {1581130996},
journal = {Proceedings of the eighteenth annual ACM symposium on Principles of distributed computing - PODC '99},
pages = {53--61},
title = {{Matching events in a content-based subscription system}},
url = {http://portal.acm.org/citation.cfm?doid=301308.301326},
year = {1999}
}
@article{Stavrou2002,
abstract = {Internet flash crowds (a.k.a. hot spots) are a phenomenon that result from a sudden, unpredicted increase in an on-line object's popularity. Currently, there is no efficient means within the Internet to scalably deliver web objects under hot spot conditions to all clients that desire the object. We present PROOFS: a simple, lightweight, peer-to-peer (P2P) approach that uses randomized overlay construction and randomized, scoped searches to efficiently locate and deliver objects under heavy demand to all users that desire them. We evaluate PROOFS' robustness in environments in which clients join and leave the P2P network as well as in environments in which clients are not always fully cooperative. Through a mix of analytical modeling, simulation, and prototype experimentation in the Internet, we show that randomized approaches like PROOFS should effectively relieve flash crowd symptoms in dynamic, limited-participation environments.},
author = {Stavrou, Angelos and Rubenstein, Dan and Sahu, Sambit},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Stavrou, Rubenstein, Sahu - 2002 - A Lightweight, Robust P2P System to Handle Flash Crowds.pdf:pdf},
number = {1},
pages = {6--17},
title = {{A Lightweight, Robust P2P System to Handle Flash Crowds}},
url = {http://www1.cs.columbia.edu/{~}danr/publish/2002/Stavrou02:P2PExper.pdf},
volume = {22},
year = {2002}
}
@article{Bharambe2002,
abstract = {Today's network games suffer from scalability and performance limitations caused by centralized client-server architectures and/or broadcast communication. In this paper, we argue that the communication between components of a game can be modeled as a publish-subscribe system. We present the design of MERCURY, a completely distributed publish-subscribe system, which supports a content-based publish-subscribe model of communication and performs distributed matching using a novel content-based routing protocol. We also present preliminary simulation results identifying key design decisions affecting the scalability and network efficiency of the system},
author = {Bharambe, Ar and Rao, Sanjay and Seshan, Srinivasan},
doi = {10.1145/566500.566501},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Bharambe, Rao, Seshan - 2002 - Mercury a scalable publish-subscribe system for internet games.pdf:pdf},
isbn = {1581134932},
journal = {1st Workshop on Network and Systems Support for Games (NetGames '02)},
pages = {3--9},
title = {{Mercury: a scalable publish-subscribe system for internet games}},
url = {http://dl.acm.org/citation.cfm?id=566501},
year = {2002}
}
@article{Jannotti2000,
abstract = {Overcast is an application-level multicasting system that can be incrementally deployed using today's Internet infrastructure. These properties stem from Overcast's implementation as an overlay network. An overlay network consists of a collection of nodes placed at strategic locations in an existing network fabric. These nodes implement a network abstrac- tion on top of the network provided by the under- lying substrate network. Overcast provides scalable and reliable single-source multicast using a simple protocol for building effi- cient data distribution trees that adapt to changing network conditions. To support fast joins, Overcast implements a new protocol for efficiently tracking the global status of a changing distribution tree. Results based on simulations confirm that Over- cast provides its added functionality while perform- ing competitively with IP Multicast. Simulations indicate that Overcast quickly builds bandwidth- efficient distribution trees that, compared to IP Multicast, provide 70{\%}-100{\%} of the total band- width possible, at a cost of somewhat less than twice the network load.},
author = {Jannotti, John and Gifford, David K. and Johnson, Kirk L. and Kaashoek, M. Frans and {O'Toole Jr.}, James W.},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Jannotti et al. - 2000 - Overcast reliable multicasting with an overlay network.pdf:pdf},
journal = {OSDI'00 Proceedings of the 4th conference on Symposium on Operating System Design {\&} Implementation},
pages = {14},
title = {{Overcast: reliable multicasting with an overlay network}},
url = {http://dl.acm.org/citation.cfm?id=1251229.1251243},
year = {2000}
}
@article{Ratnasamy2001,
abstract = {Most currently proposed solutions to application-level multicast orga- nize the group members into an application-level mesh over which a Distance- Vector routing protocol, or a similar algorithm, is used to construct source-rooted distribution trees. The use of a global routing protocol limits the scalability of these systems. Other proposed solutions that scale to larger numbers of receivers do so by restricting the multicast service model to be single-sourced. In this pa- per, we propose an application-level multicast scheme capable of scaling to large group sizes without restricting the service model to a single source. Our scheme builds on recent work on Content-Addressable Networks (CANs). Extending the CANframework to support multicast comes at trivial additional cost and, because of the structured nature of CAN topologies, obviates the need for a multicast routing algorithm. Given the deployment of a distributed infrastructure such as a CAN, we believe our CAN-based multicast scheme offers the dual advantages of simplicity and scalability. 1},
author = {Ratnasamy, Sylvia and Handley, Mark and Karp, Richard and Shenker, Scott},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Ratnasamy et al. - 2001 - Application-Level Multicast using Content-Addressable Networks.pdf:pdf},
keywords = {application multicast,overlay},
mendeley-tags = {application multicast,overlay},
title = {{Application-Level Multicast using Content-Addressable Networks}},
year = {2001}
}
@article{Stoica2001,
author = {Stoica, I and Morris, R and Karger, D and Kaashoek, M F and Balakrishnan, H},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Stoica et al. - 2001 - Chord A Scalable Peer-to-peer Pookup Service for Internet Applications.pdf:pdf},
journal = {Sigcomm},
pages = {1--14},
title = {{Chord: A Scalable Peer-to-peer Pookup Service for Internet Applications}},
year = {2001}
}
@article{Cugola2001,
abstract = {The development of complex distributed systems demands for the creation of suitable architectural styles (or paradigms) and related runtime infrastructures. An emerging style that is receiving increasing attention is based on the notion of event. In an event-based architecture, distributed software components interact by generating and consuming events. An event is the occurrence of some state change in a component of a software system, made visible to the external world. The occurrence of an event in a component is asynchronously notified to any other component that has declared some interest in it. This paradigm (usually called ¿publish/subscribe,¿ from the names of the two basic operations that regulate the communication) holds the promise of supporting a flexible and effective interaction among highly reconfigurable, distributed software components. In the past two years, we have developed an object-oriented infrastructure called JEDI (Java Event-Based Distributed Infrastructure). JEDI supports the development and operation of event-based systems and has been used to implement a significant example of distributed system, namely, the OPSS workflow management system (WFMS). The paper illustrates the main features of JEDI and how we have used them to implement OPSS. Moreover, the paper provides an initial evaluation of our experiences in using the event-based architectural style and a classification of some of the event-based infrastructures presented in the literature.},
author = {Cugola, G. and {Di Nitto}, E. and Fuggetta, A.},
doi = {10.1109/32.950318},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Cugola, Di Nitto, Fuggetta - 2001 - The JEDI event-based infrastructure and its application to the development of the OPSS WFMS.pdf:pdf},
isbn = {0098-5589 VO - 27},
issn = {00985589},
journal = {IEEE Transactions on Software Engineering},
keywords = {Business processes,Distributed systems,Event-based systems,Object-orientation,Publish/subscribe middleware,Software architectures,Workflow},
number = {9},
pages = {827--850},
title = {{The JEDI event-based infrastructure and its application to the development of the OPSS WFMS}},
volume = {27},
year = {2001}
}
@article{Banavar1999,
abstract = {The publish/subscribe (or pub/sub) paradigm is an increasingly popular model for interconnecting applications in a distributed environment. Many existing pubsystems are based on pre-defined subjects, and hence are able to exploit multicast technologies to provide scalability and availability. An emerging alternative to subject-based systems, known as content-based systems, allow information consumers to request events based on the content of published events. This model is considerably more flexible than subject-based pubsub. However, it was previously not known how to efficiently multicast published events to interested content-based subscribers within a large and geographically distributed network of broker (or router) machines. We develop and evaluate a novel and efficient distributed algorithm for this purpose, called -link matching”. Link matching performs just enough computation at each node to determine the subset of links to which an event should be forwarded. We show via simulations that: link matching yields higher throughput than flooding when subscriptions are selective; and the overall CPU utilization of link matching is comparable to that of centralized matching},
author = {Banavar, G. and Chandra, T. and Mukherjee, B. and Nagarajarao, J. and Strom, R.E. and Sturman, D.C.},
doi = {10.1109/ICDCS.1999.776528},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Banavar et al. - 1999 - An efficient multicast protocol for content-based publish-subscribe systems.pdf:pdf},
isbn = {0-7695-0222-9},
issn = {10636927},
journal = {Proceedings. 19th IEEE International Conference on Distributed Computing Systems (Cat. No.99CB37003)},
keywords = {application multicast,content based routing},
mendeley-tags = {application multicast,content based routing},
pages = {262--272},
title = {{An efficient multicast protocol for content-based publish-subscribe systems}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=776528},
year = {1999}
}
@article{Zhao2006,
abstract = {We present Tapestry, a peer-to-peer overlay routing infrastructure offering efficient, scalable, location- independent routing of messages directly to nearby copies of an object or service using only localized resources. Tapestry supports a generic Decentralized Object Location and Routing (DOLR) API using a self-repairing, soft-state based routing layer. This article presents the Tapestry architecture, algorithms, and implementation. It explores the behavior of a Tapestry deployment on PlanetLab, a global testbed of approximately 100 machines. Experimen- tal results show that Tapestry exhibits stable behavior and performance as an overlay, despite the instability of the underlying network layers. Several widely-distributed ap- plications have been implemented on Tapestry, illustrating its utility as a deployment infrastructure.},
author = {Zhao, B.Y. and Huang, Ling and Stribling, Jeremy and Rhea, S.C. and Joseph, A.D. and Kubiatowicz, J.D.},
doi = {10.1109/JSAC.2003.818784},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Zhao et al. - 2004 - Tapestry A Resilient Global-Scale Overlay for Service Deployment.pdf:pdf},
issn = {0733-8716},
journal = {IEEE Journal on Selected Areas in Communications},
month = {jan},
number = {1},
pages = {41--53},
title = {{Tapestry: A Resilient Global-Scale Overlay for Service Deployment}},
url = {http://ieeexplore.ieee.org/document/1258114/},
volume = {22},
year = {2004}
}
@article{Strom1998,
abstract = {Gryphon is a distributed computing paradigm for message brokering, which is the transferring of information in the form of streams of events from information providers to information consumers. This extended abstract outlines the major problems in message brokering and Gryphon's approach to solving them.},
archivePrefix = {arXiv},
arxivId = {cs/9810019},
author = {Strom, Robert and Banavar, Guruduth and Chandra, Tushar and Kaplan, Marc and Miller, Kevan and Mukherjee, Bodhi and Sturman, Daniel and Ward, Michael},
eprint = {9810019},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Strom et al. - 1998 - Gryphon An Information Flow Based Approach to Message Brokering.pdf:pdf},
journal = {Arxiv preprint cs9810019},
pages = {1--2},
primaryClass = {cs},
title = {{Gryphon: An Information Flow Based Approach to Message Brokering}},
url = {http://arxiv.org/abs/cs/9810019},
volume = {cs.DC/9810},
year = {1998}
}
@article{Benet,
abstract = {The InterPlanetary File System (IPFS) is a peer-to-peer dis- tributed file system that seeks to connect all computing de- vices with the same system of files. In some ways, IPFS is similar to the Web, but IPFS could be seen as a sin- gle BitTorrent swarm, exchanging objects within one Git repository. In other words, IPFS provides a high through- put content-addressed block storage model, with content- addressed hyper links. This forms a generalized Merkle DAG, a data structure upon which one can build versioned file systems, blockchains, and even a PermanentWeb. IPFS combines a distributed hashtable, an incentivized block ex- change, and a self-certifying namespace. IPFS has no single point of failure, and nodes do not need to trust each other.},
author = {Benet, Juan},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Benet - Unknown - IPFS - Content Addressed, Versioned, P2P File System.pdf:pdf},
title = {{IPFS - Content Addressed, Versioned, P2P File System}}
}
@article{Morris1997,
abstract = {BMTP offers rate controlled multicast with reliability, high throughput, and support for large numbers of receivers. A multicast sender needs feedback from receivers to recover from errors and to choose an appropriate send rate, but must avoid being overwhelmed as the number of receivers grows. BMTP does this by keeping the rate at which each receiver sends feedback inversely proportional to a running estimate of the number of receivers. BMTP bases its send rate on the minimum of the receive rates observed by the receivers, causing the sender to slow down in the face of packet loss or competing traffic, and to speed up when there is spare network capacity. BMTP�s NAK-based retransmission rarely sends any data more than twice, a substantial improvement over iterated unicast. Rabin�s Information Dispersal Algorithm can reduce this re-send rate as close as desired to the underlying loss rate of the network. Simulations with 1000 receivers substantiate these claims.},
author = {Morris, Robert},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Morris - 1997 - Bulk Multicast Transport Protocol.pdf:pdf},
issn = {0743166X},
journal = {Proceedings of the IEEE International Conference on Computer Communications (INFOCOM)},
keywords = {network multicast,reliability},
mendeley-tags = {network multicast,reliability},
pages = {455--462},
title = {{Bulk Multicast Transport Protocol}},
year = {1997}
}
@article{Gupta2004,
abstract = {Publish/Subscribe systems have become a prevalent model for delivering data from producers (publishers) to consumers (subscribers) distributed across wide-area networks while decoupling the publishers and the subscribers from each other. In this paper we present Meghdoot, which adapts content-based publish/subscribe systems to Distributed Hash Table based P2P networks in order to provide scalable content delivery mechanisms while maintaining the decoupling between the publishers and the subscribers. Meghdoot is designed to adapt to highly skewed data sets, which is typical of real applications. The experimental results demonstrate that Meghdoot balances the load among the peers and the design scales well with increasing number of peers, subscriptions and events.},
author = {Gupta, Abhishek and Sahin, Ozgur D and Agrawal, Divyakant and {El Abbadi}, Amr},
doi = {10.1007/b101561},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Gupta et al. - 2004 - Meghdoot Content-Based PublishSubscribe over P2P Networks.pdf:pdf},
isbn = {3-540-23428-4},
issn = {03029743},
journal = {Springer LNCS},
number = {Middleware 2004},
pages = {254--273},
title = {{Meghdoot: Content-Based Publish/Subscribe over P2P Networks}},
url = {http://www.springerlink.com/content/vwcyfq84f4pme6k4/},
volume = {3231/2004},
year = {2004}
}
@techreport{Eugster2000,
abstract = {This paper presents type-based publish/subscribe, a new variant of the publish/subscribe paradigm. Producers pub- lish message objects on a communication bus, and con- sumers subscribe to the bus by specifying the types of the objects they are interested in. Message objects are consid- ered as first class citizens and are classified by their types, instead of arbitrarily fixed topics. By reusing the type scheme of the language to classify message objects, type-based publish/subscribe avoids any unnatural subscription scheme and provides for a seamless integration of a publish/subscribe middleware with the pro- gramming language. Type-based publish/subscribe has sev- eral quantifiable advantages over other publish/subscribe variants. In particular, the knowledge of the type of message objects enforces performance optimizations when combined with dynamic filters for content-based subscription. Our type-based publish/subscribe prototype is based on Distributed Asynchronous Collections (DACs), program- ming abstractions for publish/subscribe interaction. They are implemented using GJ, an extended Java compiler adding genericity to the Java language, and enable the ex- pression of safely typed distributed interaction without re- quiring any generation of typed proxies.},
address = {Lausanne},
author = {Eugster, Patrick and Guerraoui, Rachid and Sventek, Joe and Scotland, Agilent Laboratories},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Eugster et al. - 2000 - Type-Based PublishSubscribe.pdf:pdf},
institution = {Swiss Federal Institute of Technology},
keywords = {asynchrony,collection,distribution,genericity,messaging,objects,publish,subscribe,typing},
title = {{Type-Based Publish/Subscribe}},
year = {2000}
}
@article{Ratnasamy2001a,
abstract = {Hash tables - which map "keys" onto "values" - are an essential building block in modern software systems. We believe a similar functionality would be equally valuable to large distributed systems. In this paper, we introduce the concept of a Content-Addressable Network (CAN) as a distributed infrastructure that provides hash table-like functionality on Internet-like scales. The CAN is scalable, fault-tolerant and completely self-organizing, and we demonstrate its scalability, robustness and low-latency properties through simulation.},
archivePrefix = {arXiv},
arxivId = {9780201398298},
author = {Ratnasamy, Sylvia and Francis, Paul and Handley, Mark and Karp, Richard and Schenker, Scott},
doi = {10.1145/964723.383072},
eprint = {9780201398298},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Ratnasamy et al. - 2001 - A scalable content-addressable network.pdf:pdf},
isbn = {1581134118},
issn = {01464833},
journal = {ACM SIGCOMM Computer Communication Review},
number = {4},
pages = {161--172},
pmid = {9617087},
title = {{A scalable content-addressable network}},
url = {http://portal.acm.org/citation.cfm?doid=964723.383072},
volume = {31},
year = {2001}
}
@article{Castro2002,
abstract = {This paper presents Scribe, a scalable applicationlevel multicast infrastructure. Scribe supports large numbers of groups, with a potentially large number of members per group. Scribe is built on top of Pastry, a generic peer-to-peer object location and routing substrate overlayed on the Internet, and leverages Pastry's reliability, self-organization, and locality properties. Pastry is used to create and manage groups and to build efficient multicast trees for the dissemination of messages to each group. Scribe provides best-effort reliability guarantees, and we outline how an application can extend Scribe to provide stronger reliability. Simulation results, based on a realistic network topology model, show that Scribe scales across a wide range of groups and group sizes. Also, it balances the load on the nodes while achieving acceptable delay and link stress when compared with Internet protocol multicast.},
author = {Castro, Miguel and Druschel, Peter and Kermarrec, Anne-Marie and Rowstron, Antony},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Castro et al. - 2002 - ScribeA large-scale and decentralized application-level multicast infrastructure.pdf:pdf},
journal = {IEEE Journal on Selected Areas in Communication},
title = {{Scribe:A large-scale and decentralized application-level multicast infrastructure}},
volume = {20},
year = {2002}
}
@article{Alvisi2007,
abstract = {Gossip-based communication protocols are often touted as being robust.$\backslash$nNot surprisingly, such a claim relies on assumptions under which$\backslash$ngossip protocols are supposed to operate. In this paper, we discuss$\backslash$nand in some cases expose some of these assumptions and discuss how$\backslash$nsensitive the robustness of gossip is to these assumptions. This$\backslash$nanalysis gives rise to a collection of new research challenges.},
author = {Alvisi, Lorenzo and Doumen, Jeroen and Guerraoui, Rachid and Koldehofe, Boris and Li, Harry and van Renesse, Robbert and Tredan, Gilles},
doi = {10.1145/1317379.1317383},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Alvisi et al. - 2007 - How robust are gossip-based communication protocols.pdf:pdf},
issn = {01635980},
journal = {ACM SIGOPS Operating Systems Review},
keywords = {gossiping,incentives,robustness,security},
number = {5},
pages = {14},
title = {{How robust are gossip-based communication protocols?}},
volume = {41},
year = {2007}
}
@misc{Baran1964,
abstract = {This paper briefly reviews the distributed communication network concept in which each station is connected to all adjacent stations rather than to a few switching points, as in a centralized system. The payoff for a distributed configuration in terms of survivability in the cases of enemy attack directed against nodes, links or combinations of nodes and links is demonstrated. A comparison is made between diversity of assignment and perfect switching in distributed networks, and the feasibility of using low-cost unreliable communication links, even links so unreliable as to be unusable in present type networks, to form highly reliable networks is discussed. The requirements for a future all-digital data distributed network which provides common user service for a wide range of users having different requirements is considered. The use of a standard format message block permits building relatively simple switching mechanisms using an adaptive store-and-forward routing policy to handle all forms of digital data including digital voice. This network rapidly responds to changes in the network status. Recent history of measured network traffic is used to modify path selection. Simulation results are shown to indicate that highly efficient routing can be performed by local control without the necessity for any central, and therefore vulnerable, control point. ER -},
author = {Baran, P.},
booktitle = {IEEE Transactions on Communications},
doi = {10.1109/TCOM.1964.1088883},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Baran - 1964 - On Distributed Communications Networks.pdf:pdf},
isbn = {0096-1965 VO - 12},
issn = {0096-2244},
number = {1},
pages = {1--9},
pmid = {374825858},
title = {{On Distributed Communications Networks}},
url = {http://ieeexplore.ieee.org/document/1088883/},
volume = {12},
year = {1964}
}
@article{Voulgaris2013,
abstract = {Overlay networks are central to the operation of large-scale decentralized applications, be it Internet-scale P2P systems deployed in the wild or cloud applications running in a controlled—albeit large-scale—environment. A number of custom solutions exist for individual applications, each employing a tailor-made mechanism to build and maintain its specific structure. This paper addresses the role of randomness in developing and maintaining such structures. Taking VICINITY, a generic overlay management framework based on self-organization, we explore tradeoffs between deterministic and probabilistic decision-making for structuring overlays. We come to the conclusion that a pinch of randomness may even be needed in overlay construction, but also that much randomness or randomness alone is not good either.},
author = {Voulgaris, Spyros and {Van Steen}, Maarten},
doi = {10.1007/978-3-642-45065-5_2},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Voulgaris, Van Steen - 2013 - VICINITY A pinch of randomness brings out the structure.pdf:pdf},
isbn = {9783642450648},
issn = {03029743},
journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
pages = {21--40},
title = {{VICINITY: A pinch of randomness brings out the structure}},
volume = {8275 LNCS},
year = {2013}
}
@inproceedings{Maymounkov2002,
abstract = {We describe a peer-to-peer distributed hash table with provable consistency and performance in a fault-prone environment. Our system routes queries and locates nodes using a novel XOR-based metric topology that simplifies the algorithm and facilitates our proof. The topology has the property that every message exchanged conveys or reinforces useful contact information. The system exploits this information to send parallel, asynchronous query messages that tolerate node failures without imposing timeout delays on users.},
address = {Berlin, Heidelberg},
author = {Maymounkov, Petar and Mazi{\`{e}}res, David},
booktitle = {Peer-to-Peer Systems},
doi = {10.1007/3-540-45748-8_5},
editor = {Druschel, Peter and Kaashoek, Frans and Rowstron, Antony},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Maymounkov, Mazi{\`{e}}res - 2002 - Kademlia A Peer-to-Peer Information System Based on the XOR Metric.pdf:pdf},
isbn = {978-3-540-45748-0},
issn = {16113349},
pages = {53--65},
publisher = {Springer Berlin Heidelberg},
title = {{Kademlia: A Peer-to-Peer Information System Based on the XOR Metric}},
url = {http://link.springer.com/10.1007/3-540-45748-8{\_}5},
volume = {2429},
year = {2002}
}
@techreport{voulgaris:inria-00070248,
abstract = {In this paper, we address the problem of constructing scalable content-based publish/subscribe systems. Publish/subscribe systems are asynchronous event-notification systems in which a published event is forwarded to exactly those nodes that have previously subscribed for that event. Subscriptions can range from a simple specification of merely the type of an event to a specification of the value ranges that an event's attributes can have. Notably the latter poses potential scalability problems. Structured peer-to-peer systems can provide scalable solutions to publish/subscribe systems with simple subscription patterns. For complex subscription types their applicability is less obvious. In this paper, we present Sub-2-Sub, a collaborative self-organizing publish/subscribe system deploying an unstructured overlay network. Sub-2-Sub relies on an epidemic-based algorithm in which peers continuously exchange subscription information to get clustered to similar peers. In contrast to many existing approaches, Sub-2-Sub supports both value-based and interval-based subscriptions. Simulations of Sub-2-Sub on synthetic and reusable workloads convey its good properties in terms of routing efficiency, fairness, accuracy and efficiency.},
author = {Voulgaris, Spyros and Rivi{\`{e}}re, Etienne and Kermarrec, Anne-marie and {Van Steen}, Maarten and Riviere, Etienne and Kermarrec, Anne-marie and {Van Steen}, Maarten and Others and Rivi{\`{e}}re, Etienne and Kermarrec, Anne-marie and Steen, Maarten Van},
booktitle = {Iptps},
doi = {10.1.1.60.8590},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Voulgaris et al. - 2005 - Sub-2-Sub Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Net(2).pdf:pdf;:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Voulgaris et al. - 2005 - Sub-2-Sub Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Networ.pdf:pdf},
institution = {INRIA},
keywords = {CONTENT-BASED PUBLISH/SUBSCRIBE,DISTRIBUTED SYSTEMS,MIDDLEWARE,PEER-TO-PEER},
number = {RR-5772},
pages = {16},
title = {{Sub-2-Sub: Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Networks}},
type = {Research Report},
url = {https://hal.inria.fr/inria-00070248/ https://hal.inria.fr/inria-00070248},
year = {2005}
}
@inproceedings{Zhuang2001,
abstract = {The demand for streaming multimedia applications is growing at an incredible rate. In this paper, we propose Bayeux, an efficient application-level multicast system that scales to arbitrarily large re- ceiver groups while tolerating failures in routers and network links. Bayeux also includes specific mechanisms for load-balancing across replicate root nodes and more efficient bandwidth consumption. Our simulation results indicate that Bayeux maintains these prop- erties while keeping transmission overhead low. To achieve these properties, Bayeux leverages the architecture of Tapestry, a fault- tolerant, wide-area overlay routing and location network.},
address = {New York, NY, USA},
author = {Zhuang, Shelley Q and Zhao, Ben Y and Joseph, Anthony D and Katz, Randy H and Kubiatowicz, John D},
booktitle = {Proceedings of the 11th International Workshop on Network and Operating Systems Support for Digital Audio and Video},
doi = {10.1145/378344.378347},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Zhuang et al. - 2001 - Bayeux.pdf:pdf},
isbn = {1581133707},
number = {June},
pages = {11--20},
publisher = {Association for Computing Machinery},
series = {NOSSDAV '01},
title = {{Bayeux: An Architecture for Scalable and Fault-Tolerant Wide-Area Data Dissemination}},
url = {https://doi.org/10.1145/378344.378347 http://portal.acm.org/citation.cfm?doid=378344.378347},
year = {2001}
}
@techreport{Voulgaris2005,
abstract = {In this paper, we address the problem of constructing scalable content-based publish/subscribe systems. Publish/subscribe systems are asynchronous event-notification systems in which a published event is forwarded to exactly those nodes that have previously subscribed for that event. Subscriptions can range from a simple specification of merely the type of an event to a specification of the value ranges that an event's attributes can have. Notably the latter poses potential scalability problems. Structured peer-to-peer systems can provide scalable solutions to publish/subscribe systems with simple subscription patterns. For complex subscription types their applicability is less obvious. In this paper, we present Sub-2-Sub, a collaborative self-organizing publish/subscribe system deploying an unstructured overlay network. Sub-2-Sub relies on an epidemic-based algorithm in which peers continuously exchange subscription information to get clustered to similar peers. In contrast to many existing approaches, Sub-2-Sub supports both value-based and interval-based subscriptions. Simulations of Sub-2-Sub on synthetic and reusable workloads convey its good properties in terms of routing efficiency, fairness, accuracy and efficiency.},
author = {Voulgaris, Spyros and Riviere, Etienne and Kermarrec, Anne-marie and {Van Steen}, Maarten and Others and Rivi{\`{e}}re, Etienne and Kermarrec, Anne-marie and Steen, Maarten Van},
booktitle = {Iptps},
doi = {10.1.1.60.8590},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Voulgaris et al. - 2005 - Sub-2-Sub Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Net(2).pdf:pdf;:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Voulgaris et al. - 2005 - Sub-2-Sub Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Networ.pdf:pdf},
institution = {INRIA},
keywords = {CONTENT-BASED PUBLISH/SUBSCRIBE,DISTRIBUTED SYSTEMS,MIDDLEWARE,PEER-TO-PEER},
pages = {16},
title = {{Sub-2-Sub: Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Networks}},
url = {https://hal.inria.fr/inria-00070248/},
year = {2005}
}
@techreport{voulgaris:inria-00070248,
author = {Voulgaris, Spyros and Rivi{\`{e}}re, Etienne and Kermarrec, Anne-Marie and {Van Steen}, Maarten},
institution = {INRIA},
keywords = {DISTRIBUTED SYSTEMS ; MIDDLEWARE ; CONTENT-BASED P},
number = {RR-5772},
pages = {16},
title = {{Sub-2-Sub: Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Networks}},
type = {Research Report},
url = {https://hal.inria.fr/inria-00070248},
year = {2005}
}
@incollection{Rowstron2001,
abstract = {This paper presents the design and evaluation of Pastry, a scalable, distributed object location and routing substrate for wide-area peer-to-peer ap- plications. Pastry performs application-level routing and object location in a po- tentially very large overlay network of nodes connected via the Internet. It can be used to support a variety of peer-to-peer applications, including global data storage, data sharing, group communication and naming. Each node in the Pastry network has a unique identifier (nodeId). When presented with a message and a key, a Pastry node efficiently routes the message to the node with a nodeId that is numerically closest to the key, among all currently live Pastry nodes. Each Pastry node keeps track of its immediate neighbors in the nodeId space, and notifies applications of new node arrivals, node failures and recoveries. Pastry takes into account network locality; it seeks to minimize the distance messages travel, according to a to scalar proximity metric like the number of IP routing hops. Pastry is completely decentralized, scalable, and self-organizing; it automatically adapts to the arrival, departure and failure of nodes. Experimental results obtained with a prototype implementation on an emulated network of up to 100,000 nodes confirm Pastry's scalability and efficiency, its ability to self-organize and adapt to node failures, and its good network locality properties.},
address = {Berlin, Heidelberg},
author = {Rowstron, Antony and Druschel, Peter},
booktitle = {Middleware 2001},
doi = {10.1007/3-540-45518-3_18},
editor = {Guerraoui, Rachid},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Rowstron, Druschel - 2001 - Pastry Scalable, Decentralized Object Location, and Routing for Large-Scale Peer-to-Peer Systems.pdf:pdf},
isbn = {978-3-540-42800-8},
number = {November 2001},
pages = {329--350},
publisher = {Springer Berlin Heidelberg},
title = {{Pastry: Scalable, Decentralized Object Location, and Routing for Large-Scale Peer-to-Peer Systems}},
url = {http://link.springer.com/10.1007/3-540-45518-3{\_}18},
year = {2001}
}
@article{Apolonia2018,
abstract = {Publish/subscribe (pub/sub) mechanisms constitute an attractive communication paradigm in the design of large-scale notification systems for Online Social Networks (OSNs). To accommodate the large-scale workloads of notifications produced by OSNs, pub/sub mechanisms require thousands of servers distributed on different data centers all over the world, incurring large overheads. To eliminate the pub/sub resources used, we propose SELECT-a distributed pub/sub social notification system over peer-To-peer (P2P) networks. SELECT organizes the peers on a ring topology and provides an adaptive P2P connection establishment algorithm where each peer identifies the number of connections required, based on the social structure and user availability. This allows to propagate messages to the social friends of the users using a reduced number of hops. The presented algorithm is an efficient heuristic to an NP-hard problem which maps workload graphs to structured P2P overlays inducing overall, close to theoretical, minimal number of messages. Experiments show that SELECT reduces the number of relay nodes up to 89{\%} versus the state-of-The-Art pub/sub notification systems. Additionally, we demonstrate the advantage of SELECT against socially-Aware P2P overlay networks and show that the communication between two socially connected peers is reduced on average by at least 64{\%} hops, while achieving 100{\%} communication availability even under high churn.},
author = {Apolonia, Nuno and Antaris, Stefanos and Girdzijauskas, Sarunas and Pallis, George and Dikaiakos, Marios},
doi = {10.1109/IPDPS.2018.00106},
file = {:home/jgantunes/Downloads/apolonia2018.pdf:pdf},
isbn = {9781538643686},
journal = {Proceedings - 2018 IEEE 32nd International Parallel and Distributed Processing Symposium, IPDPS 2018},
keywords = {P2P Network,Publish/Subscribe,Social Networks},
pages = {970--979},
publisher = {IEEE},
title = {{SELECT: A distributed publish/subscribe notification system for online social networks}},
year = {2018}
}
@article{Dias2018,
abstract = {Grid Computing fundamental basis is to use idle resources in order to maximize their efficiency. This approach quickly grew into non Grid environments, leveraging volunteered shared resources and giving the birth of Public Computing. Today, we face the challenge of how to create a simple and effective way for people to participate in such community efforts and even more importantly, how to enable developers and researchers to use and provide these resources for their applications. This paper explores and proposes a novel way to enable end user machines to communicate using bleeding edge P2P Web technologies such as WebRTC.},
author = {Dias, David and Veiga, Lu{\'{i}}s},
doi = {10.1145/3167132.3167366},
file = {:home/jgantunes/Downloads/3167132.3167366.pdf:pdf},
isbn = {9781450351911},
journal = {Proceedings of the ACM Symposium on Applied Computing},
keywords = {Cloud computing,Decentralized web platform,Javascript,Peer-to-peer,Voluntary computing,WebRTC},
pages = {2175--2184},
title = {{BrowserCloud.js: A distributed computing fabric powered by a P2P overlay network on top of the web platform}},
year = {2018}
}
@article{Hasimoto-Beltran2019,
abstract = {Mutualcast is a one-to-many (peer-to-peer) scheme for content distribution that maximizes the overall throughput during a broadacast session. It is based on a fully-connected graph (full mesh topology), which introduces benefits such as robustness or simultaneous transmission from/to multiple devices. The main disadvantage of Mutualcast is scalability; it is constraint to a small P2P group for content distribution. In this paper, we make Mutualcast scalable. We propose a highly collaborative and scalable P2P tree-based architecture made of two main components: 1) Peer grouping or clustering and 2) Hierarchical tree-based content distribution. In step 1), peer nodes (content receivers) are grouped into equal-size clusters by using a proposed heuristic size-constrained algorithm based on k-means. In step 2), clusters (which become the nodes of the tree) are organized into a single hierarchical n-ary tree-based architecture, in which the root of the tree (Root Cluster) is the one closest to source peer, while intermediate and leaf clusters are positioned in the tree according to their delay-proximity to previously inserted clusters. During content distribution, the root cluster receives the blocks of content before any other cluster in the tree and directly from (and only from) the source peer; blocks are then passed on to the next hierarchical level down the tree in order (higher levels of the tree receive the content before lower levels). Inter-clusters and intra-clusters content distribution is performed concurrently and takes into account peers upload/download capacities to relay blocks of content. The evaluation of our hierarchical P2P architecture concentrates on the following metrics: scalability of the systems, overall end-to-end delay distribution, and efficient cluster size. Finally, our architecture is compared against two well-known P2P technologies in the literature, Super-Peer and Kademlia.},
author = {Hasimoto-Beltran, Rogelio and Lopez-Fuentes, Francisco de As{\'{i}}s and Vera-Lopez, Misael},
doi = {10.1007/s12083-018-0668-7},
file = {:home/jgantunes/Downloads/hasimoto-beltran2018.pdf:pdf},
issn = {19366450},
journal = {Peer-to-Peer Networking and Applications},
keywords = {Clustering,Content distribution,Peer-to-peer networks,Video multicast},
number = {4},
pages = {724--739},
publisher = {Peer-to-Peer Networking and Applications},
title = {{Hierarchical P2P architecture for efficient content distribution}},
volume = {12},
year = {2019}
}
@inproceedings{Setty2013,
address = {New York, New York, USA},
author = {Setty, Vinay and Kreitz, Gunnar and Vitenberg, Roman and van Steen, Maarten and Urdaneta, Guido and Gim{\aa}ker, Staffan},
booktitle = {Proceedings of the 7th ACM international conference on Distributed event-based systems - DEBS '13},
doi = {10.1145/2488222.2488273},
file = {:home/jgantunes/Downloads/2488222.2488273.pdf:pdf},
isbn = {9781450317580},
keywords = {event notifications,pub,sub systems,workload analysis},
pages = {231},
publisher = {ACM Press},
title = {{The hidden pub/sub of spotify}},
url = {http://dl.acm.org/citation.cfm?doid=2488222.2488273},
year = {2013}
}
@article{Zheng2016,
abstract = {This paper proposes a scalable publish/subscribe system based on unstructured P2P networks, which are shown to have Nested Scale-Free Architectures (NSFAs). The scale-free architecture is a classic concept, which means that the peer degree distribution follows power-law. 'Nested' indicates that the scale-free architecture is preserved when low-degree peers and their associated connections are removed. We find that NSFA's hierarchy can be distributedly constructed, and has a better bound than classic hierarchies. By leveraging the NSFA's hierarchy, our publish/subscribe system achieves a competitive tradeoff among the event routing efficiency, system robustness, and overhead. For an unstructured P2P network with |V| peers, the number of routing hops for the event deliveries in our system is expected to be O(ln ln |V|). For the topological information, each peer only needs to maintain an overhead with a constant size, O(1). Peer arrival, departure, and failure can be handled within a message complexity of O(ln ln |V|). Finally, real data-driven experiments demonstrate the efficiency and effectiveness of the NSFA-based publish/subscribe system.},
author = {Zheng, Huanyang and Wu, Jie},
doi = {10.1109/ICNP.2016.7784413},
file = {:home/jgantunes/Downloads/huanyangzheng2016.pdf:pdf},
isbn = {9781509032815},
issn = {10921648},
journal = {Proceedings - International Conference on Network Protocols, ICNP},
keywords = {Nested scale-free architecture,network scalability,publish/subscribe,unstructured P2P network},
pages = {1--10},
title = {{NSFA: Nested Scale-Free Architecture for scalable publish/subscribe over P2P networks}},
volume = {2016-Decem},
year = {2016}
}
@article{DeAraujo2017,
abstract = {In this paper we present VCube-PS, a topic-based Publish/Subscribe system built on the top of a virtual hypercubelike topology. Membership information and published messages to subscribers (members) of a topic group are broadcast over dynamically built spanning trees rooted at the message's source. For a given topic, delivery of published messages respects causal order. Performance results of experiments conducted on the PeerSim simulator confirm the efficiency of VCube-PS in terms of scalability, latency, number, and size of messages when compared to a single rooted, not dynamically, tree built approach.},
author = {{De Araujo}, Jo{\~{a}}o Paulo and Arantes, Luciana and Duarte, Elias P. and Rodrigues, Luiz A. and Sens, Pierre},
doi = {10.1109/SBAC-PAD.2017.28},
file = {:home/jgantunes/Downloads/araujo2017.pdf:pdf},
isbn = {9781509012336},
journal = {Proceedings - 29th International Symposium on Computer Architecture and High Performance Computing, SBAC-PAD 2017},
keywords = {Causal Broadcast,Dynamic,Publish/Subscribe,Spanning Tree,Topic},
pages = {161--168},
title = {{A Publish/Subscribe System Using Causal Broadcast over Dynamically Built Spanning Trees}},
year = {2017}
}
@article{Zupan2017,
abstract = {Since the introduction of Bitcoin in 2008, blockchain systems have evolved immensely in terms of performance and usability. There is a massive focus on building enterprise blockchain solutions, with providers such as IBM and Microsoft already providing Blockchainas-a Service (BaaS). To facilitate the adoption of blockchain technologies across various business verticals, we argue that middleware plays an integral role in accelerating the development of automated business processes (i.e., smart contracts). We argue that decentralized messaging is a key requirement of many distributed applications and should be provided as a reusable blockchain middleware. Our system, called HyperPubSub, provides decentralized publish/subscribe messaging for a multi-federated, permissioned, environment. HyperPubSub provides secure and privacy-preserving messaging, which is audited using blockchains for validation and monetization purposes. We demonstrate our implementation using Kafka and Hyperledger.},
author = {Zupan, Nejc and Zhang, Kaiwen and Jacobsen, Hans Arno},
doi = {10.1145/3155016.3155018},
file = {:home/jgantunes/Downloads/3155016.3155018.pdf:pdf},
isbn = {9781450352017},
journal = {Middleware 2017 - Proceedings of the 2017 Middleware Posters and Demos 2017: Proceedings of the Posters and Demos Session of the 18th International Middleware Conference},
keywords = {Blockchain,Hyperledger,Kafka,Publish/Subscribe},
pages = {15--16},
title = {{Demo: HyperPubSub: a decentralized, permissioned, publish/subscribe service using blockchains}},
year = {2017}
}
@article{Kermarrec2013,
abstract = {Increasingly, one of the most prominent ways to disseminate information on the Web is through "notifications" (also known as alerts), and as such they are at the core of many large-scale applications. For instance, users are notified of articles in which they are interested through RSS feeds, of posts from their friends through social networks, or of recommendation generated by various sites. Event notification usually relies on the so-called Publish-Subscribe (PUB/SUB) communication paradigm. In PUB/SUB systems, subscribers sign up for events or classes of events in order to be asynchronously notified afterward by the system. The size of such systems (with respect to events and subscriptions) keeps growing, and providing scalable implementations of PUB/SUB systems is extremely challenging. Although there exist popular examples of centralized PUB/SUB systems that currently support a large number of subscribers, such as online social networks, they periodically face formidable challenges due to peak loads and do not always offer a support for fine-grain subscriptions. In fact, providing scalability along with expressiveness in the subscription patterns calls for distributed implementations of PUB/SUB systems. In parallel, peer-to-peer (P2P) overlay networks have emerged, providing a sound and highly scalable network foundation upon which to build distributed applications including PUB/SUB systems. In this article, we focus on fully decentralized (P2P), highly scalable, PUB/SUB systems. More specifically, we investigate how PUB/SUB and P2P research can be integrated. We define the design space and explore it in a systematic way. We expose an understanding of available design choices; provide a comprehensive classification and understanding of prominent P2P PUB/SUB systems, positioning them against the design dimensions; and highlight correlations between and implications, benefits, and shortcomings of design alternatives. [ABSTRACT FROM AUTHOR]},
author = {Kermarrec, Anne-Marie and Triantafillou, Peter},
doi = {10.1145/2543581.2543583},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Kermarrec, Triantafillou - 2013 - XL peer-to-peer pubsub systems.pdf:pdf},
issn = {03600300},
journal = {ACM Computing Surveys},
number = {2},
pages = {1--45},
title = {{XL peer-to-peer pub/sub systems}},
url = {http://dl.acm.org/citation.cfm?doid=2543581.2543583},
volume = {46},
year = {2013}
}
@inproceedings{Baldoni2007,
abstract = {The completely decoupled interaction model offered by the publish/subscribe communication paradigm perfectly suits the interoperability needs of todays large-scale, dy-namic, peer-to-peer applications. The unmanaged envi-ronments, where these applications are expected to work, pose a series of problems (potentially wide number of par-tipants, low-reliability of nodes, absence of a centralized authority, etc.) that severely limit the scalability of exist-ing approaches which were originally thought for support-ing distributed applications built on the top of static and managed environments. In this paper we propose an archi-tecture for implementing the topic-based publish/subscribe paradigm in large scale peer-to-peer systems. The archi-tecture is based on clustering peers subscribed to the same topic. The major novelty of this architecture lies in the mechanism employed to bring events from the publisher to the cluster (namely outer-cluster routing). The evaluation shows that this mechanism for outer-cluster routing has a probability to bring events to the destination cluster very close to 1 while keeping small the involved number of out-of-cluster peers. Finally, the overall architecture is shown to be scalable along several fundamental dimensions like number of participants, subscriptions, and to exhibit a fair load distribution (load distribution closely follows the dis-tribution of subscriptions on nodes).},
address = {New York, New York, USA},
author = {Baldoni, Roberto and Beraldi, Roberto and Quema, Vivien and Querzoni, Leonardo and Tucci-Piergiovanni, Sara},
booktitle = {Proceedings of the 2007 inaugural international conference on Distributed event-based systems - DEBS '07},
doi = {10.1145/1266894.1266898},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Baldoni et al. - 2007 - TERA Topic-based Event Routing for peer-to-peer Architectures.pdf:pdf},
isbn = {9781595936653},
pages = {2},
publisher = {ACM Press},
title = {{TERA}},
url = {http://portal.acm.org/citation.cfm?doid=1266894.1266898},
year = {2007}
}
@article{Voulgaris2005a,
abstract = {Unstructured overlays form an important class of peer-to-peer networks, notably when content-based searching is at stake. The construction of these overlays, which is essentially a membership management issue, is crucial. Ideally, the resulting overlays should have low diameter and be resilient to massive node failures, which are both characteristic properties of random graphs. In addition, they should be able to deal with a high node churn (i.e., expect high-frequency membership changes). Inexpensive membership management while retaining random-graph properties is therefore important. In this paper, we describe a novel gossip-based membership management protocol that meets these requirements. Our protocol is shown to construct graphs that have low diameter, low clustering, highly symmetric node degrees, and that are highly resilient to massive node failures. Moreover, we show that the protocol is highly reactive to restoring randomness when a large number of nodes fail.},
author = {Voulgaris, Spyros and Gavidia, Daniela and {Van Steen}, Maarten},
doi = {10.1007/s10922-005-4441-x},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Voulgaris, Gavidia, Van Steen - 2005 - CYCLON Inexpensive membership management for unstructured P2P overlays(2).pdf:pdf},
isbn = {1064-7570},
issn = {10647570},
journal = {Journal of Network and Systems Management},
keywords = {Epidemic/gossiping protocols,Membership management,Peer-to-peer,Random graphs,Unstructured overlays},
number = {2},
pages = {197--216},
title = {{CYCLON: Inexpensive membership management for unstructured P2P overlays}},
volume = {13},
year = {2005}
}
@article{Saroiu2002,
author = {Saroiu, Stefan and Gummadi, P Krishna and Gribble, Steven},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Saroiu, Gummadi, Gribble - 2002 - A Measurement Study of Peer-to-Peer File Sharing Systems(2).pdf:pdf},
journal = {SPIE MMCN '02: Proc. of the Annual Multimedia Computing and Networking},
keywords = {broadband,internet services,network measurements,peer-to-peer,wide-area systems},
pages = {156--170},
title = {{A Measurement Study of Peer-to-Peer File Sharing Systems}},
volume = {4673},
year = {2002}
}
@article{Eugster2003,
abstract = {Well adapted to the loosely coupled nature of distributed interaction in large-scale applications, the publish/subscribe communication paradigm has recently received increasing attention.With systems based on the publish/subscribe interaction scheme, subscribers register their interest in an event, or a pattern of events, and are subsequently asynchronously notified of events generated by publishers. Many variants of the paradigm have recently been proposed, each variant being specifically adapted to some given application or network model. This paper factors out the common denominator underlying these variants: full decoupling of the communicating entities in time, space, and synchronization.We use these three decoupling dimensions to better identify commonalities and divergences with traditional interaction paradigms. The many variations on the theme of publish/subscribe are classified and synthesized. In particular, their respective benefits and shortcomings are discussed both in terms of interfaces and implementations.},
author = {Eugster, Patrick Th. and Felber, Pascal A. and Guerraoui, Rachid and Kermarrec, Anne-Marie},
doi = {10.1145/857076.857078},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Eugster et al. - 2003 - The many faces of publishsubscribe.pdf:pdf},
isbn = {0360-0300},
issn = {03600300},
journal = {ACM Computing Surveys},
number = {2},
pages = {114--131},
pmid = {22171980},
title = {{The many faces of publish/subscribe}},
url = {http://portal.acm.org/citation.cfm?doid=857076.857078},
volume = {35},
year = {2003}
}
@article{Voulgaris2005b,
abstract = {In this paper, we address the problem of constructing scalable content-based publish/subscribe systems. Publish/subscribe systems are asynchronous event-notification systems in which a published event is forwarded to exactly those nodes that have previously subscribed for that event. Subscriptions can range from a simple specification of merely the type of an event to a specification of the value ranges that an event's attributes can have. Notably the latter poses potential scalability problems. Structured peer-to-peer systems can provide scalable solutions to publish/subscribe systems with simple subscription patterns. For complex subscription types their applicability is less obvious. In this paper, we present Sub-2-Sub, a collaborative self-organizing publish/subscribe system deploying an unstructured overlay network. Sub-2-Sub relies on an epidemic-based algorithm in which peers continuously exchange subscription information to get clustered to similar peers. In contrast to many existing approaches, Sub-2-Sub supports both value-based and interval-based subscriptions. Simulations of Sub-2-Sub on synthetic and reusable workloads convey its good properties in terms of routing efficiency, fairness, accuracy and efficiency.},
author = {Voulgaris, Spyros and Rivi{\`{e}}re, Etienne and Kermarrec, Anne-marie and Steen, Maarten Van},
doi = {10.1.1.60.8590},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Voulgaris et al. - 2005 - Sub-2-Sub Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Net(2).pdf:pdf},
keywords = {CONTENT-BASED PUBLISH/SUBSCRIBE,DISTRIBUTED SYSTEMS,MIDDLEWARE,PEER-TO-PEER},
pages = {16},
title = {{Sub-2-Sub: Self-Organizing Content-Based Publish and Subscribe for Dynamic and Large Scale Collaborative Networks}},
url = {https://hal.inria.fr/inria-00070248/},
year = {2005}
}
@article{Carzaniga2003,
abstract = {The components of a loosely coupled system are typically designed to operate by generating and responding to asynchronous events. An event notification service is an application-independent infrastructure that supports the construction of event-based systems, whereby generators of events publish event notifications to the infrastructure and consumers of events subscribe with the infrastructure to receive relevant notifications. The two primary services that should be provided to components by the infrastructure are notification selection (i. e., determining which notifications match which subscriptions) and notification delivery (i.e., routing matching notifications from publishers to subscribers). Numerous event notification services have been developed for local-area networks, generally based on a centralized server to select and deliver event notifications. Therefore, they suffer from an inherent inability to scale to wide-area networks, such as the Internet, where the number and physical distribution of the service's clients can quickly overwhelm a centralized solution. The critical challenge in the setting of a wide-area network is to maximize the expressiveness in the selection mechanism without sacrificing scalability in the delivery mechanism. This paper presents SIENA, an event notification service that we have designed and implemented to exhibit both expressiveness and scalability. We describe the service's interface to applications, the algorithms used by networks of servers to select and deliver event notifications, and the strategies used to optimize performance. We also present results of simulation studies that examine the scalability and performance of the service.},
author = {Carzaniga, Antonio and Rosenblum, David S. and Wolf, Alexander L.},
doi = {10.1109/FITS.2003.1264940},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Carzaniga, Rosenblum, Wolf - 2003 - Design and evaluation of a wide-area event notification service.pdf:pdf},
isbn = {076952057X},
issn = {07342071},
journal = {Foundations of Intrusion Tolerant Systems, OASIS 2003},
keywords = {Algorithms,C.2.1 [network architecture and design]: distribut,C.2.2 [network protocols]: applications,C.2.4 [distributed systems]: client/server - distr,C.2.5 [local and wide-area networks]: internet,C.2.6 [internet-working]: routers,C.4 [performance of systems]: design studies,Content-based addressing and routing,Event notification,Experimentation,I.6.3 [simulation and modeling]: applications,I.6.4 [simulation and modeling]: model validation,I.6.8 [simulation and modeling]: types of simulati,Modeling techniques,Network communication,Network topology,Performance,Publish/subscribe,Routing protocols,Store and forward networks},
number = {3},
pages = {283--334},
pmid = {482106},
title = {{Design and evaluation of a wide-area event notification service}},
volume = {19},
year = {2003}
}
@article{Setty2012,
abstract = {We propose PolderCast, a P2P topic-based Pub/Sub sys- tem that is (a) fault-tolerant and robust, (b) scalable w.r.t the number of nodes interested in a topic and number of topics that nodes are in- terested in, and (c) fast in terms of dissemination latency while (d) at- taining a low communication overhead. This combination of properties is provided by an implementation that blends deterministic propagation over maintained rings with probabilistic dissemination following a limited number of random shortcuts. The rings are constructed and maintained using gossiping techniques. The random shortcuts are provided by two distinct peer-sampling services: Cyclon generates purely random links while Vicinity produces interest-induced random links. We analyze PolderCast and survey it in the context of existing approaches. We evaluate PolderCast experimentally using real-world workloads from Twitter and Facebook traces. We use widely renowned Scribe [5] as a baseline in a number of experiments. Robustness with respect to node churn is evaluated through traces from the Skype super- peer network. We show that the experimental results corroborate all of the above properties in settings of up to 10K nodes, 10K topics, and 5K topics per-node.},
author = {Setty, Vinay and Steen, Maarten Van},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Setty, Steen - 2012 - Poldercast Fast, robust, and scalable architecture for P2P topic-based pubsub.pdf:pdf},
isbn = {9783642351693},
issn = {03029743},
journal = {Proceedings of the 13th {\ldots}},
keywords = {gossiping,peer-to-peer,publish,subscribe},
pages = {271--291},
title = {{Poldercast: Fast, robust, and scalable architecture for P2P topic-based pub/sub}},
url = {http://dl.acm.org/citation.cfm?id=2442644},
year = {2012}
}
@article{Pietzuch2002,
abstract = {In this paper, we argue that there is a need for an event-based middleware to build large-scale distributed systems. Existing publish/subscribe systems still have limitations compared to invocation-based middlewares. We introduce Hermes, a novel event-based distributed middleware architecture that follows a type- and attribute-based publish/subscribe model. It centres around the notion of an event type and supports features commonly known from object-oriented languages like type hierarchies and super-type subscriptions. A scalable routing algorithm using an overlay routing network is presented that avoids global broadcasts by creating rendezvous nodes. Fault-tolerance mechanisms that can cope with different kinds of failures in the middleware are integrated with the routing algorithm resulting in a scalable and robust system.},
author = {Pietzuch, P. R. and Bacon, J. M.},
doi = {10.1109/ICDCSW.2002.1030837},
file = {:home/jgantunes/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Pietzuch, Bacon - 2002 - Hermes A distributed event-based middleware architecture.pdf:pdf},
isbn = {0769515886},
journal = {Proceedings - International Conference on Distributed Computing Systems},
pages = {611--618},
pmid = {531283},
title = {{Hermes: A distributed event-based middleware architecture}},
volume = {2002-Janua},
year = {2002}
}
